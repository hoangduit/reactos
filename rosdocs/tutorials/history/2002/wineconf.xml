<chapter>
<title>ReactOS: Where it is and where its going - Wineconf 2002</title>
<!--
<artheader>
   <title>ReactOS: Where it is and where its going - Wineconf 2002</title>
   <author>
      <firstname>Jason</firstname>
      <surname>Filby</surname>
      <affiliation>
        <address>
          <email>jasonfilby@yahoo.com</email>
        </address>
      </affiliation>
   </author>
   <author>
      <firstname>Steven</firstname>
      <surname>Edwards</surname>
      <affiliation>
        <address>
          <email>Steven_Ed4153@yahoo.com</email>
        </address>
      </affiliation>
   </author>
</artheader>
-->
<abstract>
<para>
This is the transcript of the presentation and speech given by Jason Filby and Steven Edwards at Wineconf 2002 for the lindows.com and Wine Project Developers.
</para>
</abstract>

<sect2>
<title>ReactOS Beginnings</title>
<para>
Opening speech by Jason on the history of ReactOS.
</para>
</sect2>

<sect2>
<title>ReactOS Mission and Goals</title>
<para>
Disscussion on the original goal of compatibility with NT 4 applications and drivers. Further discussion looking at 2K/XP compatibility, short discussion on .NET plan by Casper Hornstrup.
</para>
</sect2>

<sect2>
<title>Console Application Support Overview</title>
<para>
Short Disscussion on Console Application support followed by demos.
</para>
<itemizedlist>
<listitem>ReactOS cmd.exe (ported from FreeDOS)</listitem>
<listitem>GNU Midnight commander for win32</listitem> 
<listitem>DFlat based editor</listitem>
<listitem>Registry Explorer</listitem>
</itemizedlist>
<para>
Discussion on plans to Stabilize win32 console applications
<itemizedlist>
<listitem>Self-hosted building of ReactOS using Mingw32</listitem>
<listitem>Fix and separate DFlat in to dll for other console applications.</listitem>
</itemizedlist>
</para>
</sect2>

<sect2>
<title>Win32 Graphical Application Support</title>
<para>
Demo of gditest and discussion on future windowing support.
</para>
</sect2>

<sect2>
<title>Winsock Support</title>
<para>
Discussion on present limited winsock2 support. Overview of IP, lack of TCP and ne2000 network card driver.
Demo of current winsock applications.
<itemizedlist> 
<listitem>finger</listitem>
<listitem>ncftp</listitem>
<listitem>ping</listitem>
<listitem>telnet (2)</listitem>
<listitem>roshttp</listitem>
<listitem>whois</listitem>
</itemizedlist>
All winsock applications except the C++ telnet can load under ReactOS, but crash due to lack of TCP support in ws2_32.dll
</para>
</sect2>

<sect2>
<title>NTOSKRNL design and drivers</title>
<para>
Overview of ReactOS Kernel Architecture 
<itemizedlist> 
<listitem>Hardware Abstraction Layer</listitem>
<listitem>Device Drivers (Structured Exception Handling Discussion)</listitem>
<listitem>Installable filesystem drivers</listitem>
<listitem>Registry (Discussion on Binary windows registry compatibility)</listitem>
<listitem>PowerPC and Alpha port</listitem>
<listitem>Drivers</listitem>  
</itemizedlist>
</para>
</sect2>


<sect2>
<title>Subsystems</title>
<para>

Subsystems allow ReactOS, as they do WinNT, to run applications designed for other systems. 
The original goal of win32 support has not been dropped. Developers who work on subsystems other than win32 are those who would never have contributed to the win32 system. This means that we are NOT dispersing our existing win32 developers. Instead, we are attracting developers that work on other subsystems and could bring more developers to the kernel.
</para>
</sect2>

<sect2>
<title>Win32 Subsystem</title>
<para>
Win32k.sys is the kernel mode portion of the win32 subsystem that is being implemented by the ReactOS project. All of the previous demonstrations are defendant upon win32k.sys. Win32k.sys is the primary windowing system, all other subsystems must route through it to display graphics. 
</para>
<para>
ReactOS currently has a unusable fork of the wine code base. This fork will make up the majority of the user mode portion of the win32 subsystem. 
</para>
<para>
<itemizedlist>
<listitem>Most NTUSER APIs</listitem>
<listitem>Default Windows Procedure</listitem>
<listitem>Messaging</listitem> 
</itemizedlist>
</para>
</sect2>

<sect2>
<title>POSIX Subsystem</title>
<para>
Initial POSIX 2 substem work started, implemented as psx.dll. Initial POSIX application headers are detected by kernel32 and invoke the posix subsystem. POSIX subsystem crashes after this point. POSIX subproject is in its first year.
</para>
<para>
Future plans for POSIX subsystem:
</para>
<para>
<itemizedlist>
<listitem>Adapting LibW11 to ReactOS GDI for easy porting of X11 Applications.</listitem>
<listitem>Demo showing rxvt/msys ported with LibW11.dll</listitem>
<listitem>Discussion on Certifying KDE and GNOME with our POSIX subsystem</listitem>
<listitem>Adapt LINE (Line is Not a Linux Emulator) to load linux/bsd elf binary programs.</listitem>
<listitem>Certify GNU software library.</listitem>
</itemizedlist>
</para>
</sect2>

<sect2>
<title>Java Subsystem</title>
<para>
JOS (Java Operating System) project has agreed to use ReactOS for their kernel. JOS will be written in JAVA and use a snapshot of a JVM in memory saved to disk to bootstrap the JVM. Libraries are already under development.
</para>
<para>
Discussion on future plans to adapt ReactOS/JOS for embedded market.
</para>
</sect2>

<sect2>
<title>OS/2 Subsystem</title>
<para>
Marat Khalil is interested in developing an OS/2 subsystem for ReactOS. After announcing his intent to develop this subsystem, two others expressed interested in assisting with development. Since WinNT originally came with an OS/2 subsystem, our OS/2 subsystem is a natural development for ReactOS. An LX loader is being currently in development.
</para>
</sect2>

<sect2>
<title>Other Subsystems</title>
<para>
Discussion of possible subsystems include:
<itemizedlist> 
<listitem>DOS/Win16</listitem>
<listitem>BeOS</listitem>
<listitem>VMS</listitem>
<listitem>Other experimental subsystems for Research purposes.</listitem>  
</itemizedlist>
</para>
</sect2>

<sect2>
<title>WINE Integration</title>
<para>
Overview of ReactOS wine port for user space win32 support. Discussion on Header File Licensing and organization is currently a problem for ReactOS due to the usage of three groups of header files. ReactOS uses it own private, Mingw32 and Wine Headers. A Solution for this problem may lie in creating a header hile database that is shared by the 3 projects.
</para>
</sect2>

<sect2>
<title>ReactOS Foundation</title>
<para>
Overview of the The ReactOS development teams researching in creating a non-profit organization to provide legal defense for the ReactOS and releated project developers. 
</para>
</sect2>

</chapter>
